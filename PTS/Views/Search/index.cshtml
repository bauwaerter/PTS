@using PTS.Infrastructure;


<br />
<div class="row">

    <div class="form-group">
        <div class="col-md-4">
            <input id="globalSearch" class="form-control" value="@if(ViewBag.TeacherName != null){@(ViewBag.TeacherName)}" style="font-size: 20px;" />
        </div>
        <div class="col-md-2">
            <button id="globalSearchButton" class="btn btn-primary" float: right>Search</button>
        </div>
        <div class="col-md-4">
            <input id="searchZipCode" value="@if (Request.IsAuthenticated){@(SessionDataHelper.ZipCode)}else{<text>76019</text>}" class="form-control" style="font-size: 20px;" />
        </div>
        <div class="col-md-2">
            <button id="applyZipCodeFilter" class="btn btn-primary">Apply</button>
        </div>
        
    </div>
</div>
<div class="row"style="height:10px;">

</div>
<div class="row">
            <div class="col-md-1 col-md-offset-5">
                <p>Miles</p>
            </div>
            <div class="col-md-4">
                <select name="herolist" id="mileselectlist" class="select-block">
                    <option value="20" selected="selected">20</option>
                    <option value="50">50</option>
                    <option value="100">100</option>
                    <option value="200">200</option>
                </select>
            </div>
        </div>
<div class="row">
    
</div>

  

<br />
<div id="teacherUserTable"></div>
<br />
<br />
<div id="classesTable"></div>

<body onload="initialize()"></body>

<script src="~/Content/Flat-UI/js/bootstrap-select.js"></script>
<script src="~/Content/Flat-UI/js/bootstrap.min.js"></script>
<script>
    @if (Request.IsAuthenticated)
    {
        <text>
        var lat1 = '@(SessionDataHelper.Latitude)';
        </text>
    }
    else{
        <text>
        var lat1 = 32.7050;
        </text>
    }
    @if (Request.IsAuthenticated)
    {
        <text>
        var lon1 = '@(SessionDataHelper.Longitude)';
        </text>
    }
    else {
        <text>
        var lon1 = 97.1228;
        </text>
    }
    
    var geocoder;

    function initialize() {
        geocoder = new google.maps.Geocoder();
    }

    function codeAddress(callback) {
        var address = $('#searchZipCode').val();
        console.log(address);
        geocoder.geocode({ 'address': address }, function (results, status) {
            if (status == google.maps.GeocoderStatus.OK) {

                var marker = new google.maps.Marker({
                    position: results[0].geometry.location
                });

                lat1 = results[0].geometry.location.lat();
                lon1 = results[0].geometry.location.lng();
                console.log(lat1);
                console.log(lon1);

                callback();

               
            } else {
                alert("Geocode was not successful for the following reason: " + status);
            }
        });
    }
    
          
    $(document).ready(function () {
        $("#mileselectlist[name='herolist']").selectpicker({ style: 'btn-primary', menuStyle: 'dropdown-inverse' });
                

        $('#globalSearchButton').on('click', function (event) {
            $('#teacherUserTable').jtable('load', JSON.stringify({
                textSearch: $('#globalSearch').val(),
                lat1: lat1,
                lon1: lon1,
                miles: $('#mileselectlist').val(),
            }));
            $('#classesTable').jtable('load', JSON.stringify({
                textSearch: $('#globalSearch').val(),
                lat1: lat1,
                lon1: lon1,
                miles: $('#mileselectlist').val()
            }));
        });
        $('#globalSearch').keypress(function (e) {
           if (e.which == 13) {
               $('#globalSearchButton').focus().click();
            }
        });

        

        $('#applyZipCodeFilter').on('click', function () {
            var callback = function () {
                $('#teacherUserTable').jtable('load', JSON.stringify({
                    textSearch: $('#globalSearch').val(),
                    lat1: lat1,
                    lon1: lon1,
                    miles: $('#mileselectlist').val()
                }));
                $('#classesTable').jtable('load', JSON.stringify({
                    textSearch: $('#globalSearch').val(),
                    lat1: lat1,
                    lon1: lon1,
                    miles: $('#mileselectlist').val()
                }));

            };

            codeAddress(callback);
        });

        $('#searchZipCode').keypress(function (e) {
            if (e.which == 13) {
                $('#applyZipCodeFilter').focus().click();
            }
        });

        $('#teacherUserTable').jtable({
            title: 'Tutors',
            openChildAsAccordion: true,
            paging: true,
            pageSize: 10,
            ajaxSettings: {
                contentType: 'application/json'
        	},
            actions: {
                listAction: '@Url.Action("GetTeacherUsers")',
                
            },
            fields: {
                Id: {
                    key: true,
                    list: false,
                    create: false,
                    edit: false,
                },
                FirstName: {
                    title: 'First Name',
                },
                LastName: {
                    title: 'Last Name'
                },
                Email: {
                    title: 'Email',
                },
                AverageRating: {
                    title: 'Ratings',
                    display: function (data) {
                        if (data.record.AverageRating != "No Ratings") {
                            return '<a href="@Url.Action("ReviewTeacherView", "Review")?teacherId=' + data.record.Id + '">' + data.record.AverageRating + ' / 10</a>';
                        }
                        else {
                            return data.record.AverageRating;
                        }
                    }
                },
                HourlyRate: {
                    title: 'Hourly Rate'
                },
                Availability: {
                    title: 'Availability',
                    sorting: false,
                    display: function (tutorData) {
                        var link = $('<a>Availibility</a>');
                        link.click(function () {

                            $('#teacherUserTable').jtable('openChildTable',
                                link.closest('tr'),
                                {
                                    title: 'Availibility for ' + tutorData.record.FirstName + " " + tutorData.record.LastName,
                                    actions: {
                                        listAction: '@Url.Action("GetTutorAvailibility")',
                                    },
                                    fields: {
                                        Id: {
                                            type: 'hidden',
                                            defaultValue: tutorData.record.Id
                                        },
                                        ScheduleId: {
                                            key: true,
                                            list: false,
                                        },
                                        Sunday: {
                                            title: 'Sunday',
                                        },
                                        Monday: {
                                            title: 'Monday'
                                        },
                                        Tuesday: {
                                            title: 'Tuesday'
                                        },
                                        Wednesday: {
                                            title: 'Wednesday'
                                        },
                                        Thursday: {
                                            title: 'Thursday'
                                        },
                                        Friday: {
                                            title: 'Friday'
                                        },
                                        Saturday: {
                                            title: 'Saturday'
                                        },

                                    }
                                }, function (innerData) {
                                    innerData.childTable.jtable('load', {
                                        tutorUserId: tutorData.record.Id
                                    });
                                });
                        });
                        return link;
                    }
                },
                @if (Request.IsAuthenticated)
                {
                    <text>
                RequestAppointment: {
                    title: 'Request Session',
                    width: '15%',
                    display: function (data) {
                        return '<a href="@Url.Action("LoadRequestSession", "Account")?teacherId=' + data.record.Id + '">Request Session</a>';
                    }
                },
                Map: {
                    title: 'Map',
                    display: function (data) {
                        return '<a href="@Url.Action("LoadTeacherMap")?teacherId=' + data.record.Id + '">Map</a>';
                    }
                }
                </text>
                }
            }
        }).jtable('load');

       

        var toolbarItems = [{
            text: 'Enroll',
            click: function() {
                var selectedRow = $('#classesTable').jtable('selectedRows').data('record');
                console.log(selectedRow.Id + " HEREER ");
                if (selectedRow) {
                    window.location.href = '@Url.Action("ProcessPayment", "Payment")?classId=' + selectedRow.Id;
                }
            },
        }];
        
        $('#classesTable').jtable({
            title: 'Classes',
            selecting: true,
            multiselect: false,
            selectingCheckboxes: true,
            paging: true,
            pageSize: 10,
            toolbar: {
                items: toolbarItems
            },
            ajaxSettings: {
                contentType: 'application/json'
            },
            actions: {
                listAction: '@Url.Action("GetClasses")',
            },
            fields: {
                Id: {
                    key: true,
                    list: false,
                    create: false,
                    edit: false,
                },
                SubjectId: {
                    list: false,
                    create: false,
                    edit: false,
                },
                LocationId: {
                    list: false,
                    create: false,
                    edit: false,
                },
                Description: {
                    title: 'Description',
                    width: '10%'
                },
                TeacherName: {
                    title: 'Teacher',
                    width: '10%'
                },
                SubjectName:{
                    title: 'Subject',
                    width: '10%'
                },
                AverageRating: {
                    title: 'Ratings',
                    width: '8%',
                    display: function (data) {
                        if (data.record.AverageRating != "No Ratings") {
                            return '<a href="@Url.Action("ReviewClassesView", "Review")?classId=' + data.record.Id + '">' + data.record.AverageRating + ' / 10</a>';
                        }
                        else {
                            return data.record.AverageRating;
                        }
                    }
                },
                StartTime: {
                    title: 'Start Time',
                    width: '10%'
                },
                EndTime: {
                    title: 'End Time',
                    width: '10%'
                },
                Duration: {
                    title: 'Duration',
                    width: '3%',
                },
                Address: {
                    title: 'Address'
                },
                City: {
                    title: 'City'
                },
                State: {
                    title: 'State'
                },
                ZipCode: {
                    title: 'Zip Code',
                    width: '10%'
                },
                Country: {
                    title: 'Country',
                    width: '5%',
                },
                @if (Request.IsAuthenticated){
                    <text>
                Map: {
                    title: 'Map',
                    display: function (data) {
                        return '<a href="@Url.Action("LoadClassesMap")?classesId=' + data.record.Id + '">Map</a>';
                    }
                }
                </text>
                }

            },
        }).jtable('load');

    });


    
</script>

