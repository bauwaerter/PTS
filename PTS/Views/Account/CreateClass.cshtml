@model PTS.Models.ClassViewModel
@{
    ViewBag.Title = "CreateClass";
}

<h2>CreateClass</h2>
<form id="ClassForm">
    <div class="row">
        <div class="col-md-1">
            <label>Description</label>
            <input style="width:auto" class="form-control" name="Description" />
        </div>
        <div class="col-md-2 col-md-offset-2">
            <label>Start Time</label>
            <input style="width:auto" class="form-control" name="StartTime" type="time" />
        </div>
        <div class="col-md-1 col-md-offset-0">
            <label>EndTime</label>
            <input style="width:auto" class="form-control" name="EndTime" type="time" />
        </div>
    </div>
    <br/>
    <div class="row">
        <div class="col-md-1">
            <label>Subject</label>
        </div>
        <div class="col-md-3 col-md-offset-0"> 
            <select name="SubjectID" id="subjectList" class="select-block">
                @foreach (var item in Model.Subjects)
                {
                    <text>
                    <option value="@(item.Value)" selected="@(item.Selected)">@(item.Text)</option>
                    </text>
                }
            </select>
            </div>
    </div>

    <br />

    <label>Location</label>
    <div class="row">
        <input id="Latitude" name="Latitude" hidden="hidden" />
        <input id="Longitude" name="Longitude" hidden="hidden" />
        <div class="col-md-1 col-md-offset-1">
            <label>Address</label>
            <span><input id="Address" name="Address" style="width: auto" class="form-control" /></span>
        </div>
        <div class="col-md-1 col-md-offset-2">
            <label>City</label>
            <span><input id="City" name="City" style="width: auto" class="form-control" /></span>
        </div>
        <div class="col-md-1 col-md-offset-2">
            <label>State</label>
            <span><input id="State" name="State" style="width: auto" class="form-control" /></span>
        </div>
    </div>

    <div class="row">
        <div class="col-md-1 col-md-offset-1">
            <label>ZipCode</label>
            <span><input id="ZipCode" name="ZipCode" style="width: auto" class="form-control" /></span>
        </div>
        <div class="col-md-1 col-md-offset-2">
            <label>Country</label>
            <span><input id="Country" name="Country" style="width: auto" class="form-control" /></span>
        </div>
    </div>
    <br />
    <div class="row">
        <label>Schedule</label>
    </div>
    <div class="row">
        <div class=" col-md-3 col-md-offset-1">
            <label>Start Date</label>
            <input type="date" name="DateStart" class="form-control" />
        </div>
        <div class="col-md-3 col-md-offset-2">
            <label>End Date</label>
            <input type="date" name="DateEnd"  class="form-control" />
        </div>
    </div>
    
    <div class="row content-wrapper container">
        <br />
        <div class="col-md-2 col-md-offset-1">
            <label>Monday</label>
            @Html.CheckBoxFor(m => m.Monday, new { @checked = "checked" })
        </div>
        <div class="col-md-2 ">
            <label>Tuesday</label>
            @Html.CheckBoxFor(m => m.Tuesday, new { @checked = "checked" })
        </div>
        <div class="col-md-2 ">
            <label>Wednesday</label>
            @Html.CheckBoxFor(m => m.Wednesday, new { @checked = "checked" })
            </div>
        <div class="col-md-2 ">
            <label>Thursday</label>
            @Html.CheckBoxFor(m => m.Thursday, new { @checked = "checked" })
            </div>
        <div class="col-md-2 ">
            <label>Friday</label>
            @Html.CheckBoxFor(m => m.Friday, new { @checked = "checked" })
            </div>
    </div>
    <br />

</form>
<div>
    <button class="btn btn-primary" id="CreateClassBtn">Create Class</button>
</div>
<body onload="initialize()"></body>
<script src="~/Content/Flat-UI/js/bootstrap-select.js"></script>
<script src="~/Content/Flat-UI/js/bootstrap.min.js"></script>
<script>

    var geocoder;

    function initialize() {
        geocoder = new google.maps.Geocoder();
    }

    function codeAddress(callback) {
        var address = $('#Address').val() + ' ' + $('#City').val() + ' ' + $('#State').val() + ' ' + $('#ZipCode').val() + ' ' + $('#Country').val();
        console.log(address);
        geocoder.geocode({ 'address': address }, function (results, status) {
            if (status == google.maps.GeocoderStatus.OK) {

                var marker = new google.maps.Marker({
                    position: results[0].geometry.location
                });

                var latitude = results[0].geometry.location.lat();
                var longitude = results[0].geometry.location.lng();
                console.log(latitude);
                console.log(longitude);

                $('#Latitude').prop('value', latitude);
                $('#Longitude').prop('value', longitude);

                callback();
            } else {
                alert("Geocode was not successful for the following reason: " + status);
            }
        });
        console.log("RETURNING");

    }


    $(document).ready(function () {
        $("#subjectList[name='SubjectID']").selectpicker({ style: 'btn-primary', menuStyle: 'dropdown-inverse' });

        $('#CreateClassBtn').on('click', function () {
            var callback = function () {
                $.ajax({
                    url: '@Url.Action("SaveClass")',
                    type: 'post',
                    data: $(':input').serialize(),
                    success: function (data) {
                    }
                });  
            }
            codeAddress(callback);
            debugger
            window.location.href = '/Account/DisplayClasses'

        });
    });

</script>
